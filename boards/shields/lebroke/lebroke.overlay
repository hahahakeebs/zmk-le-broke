#include <dt-bindings/zmk/matrix_transform.h>
#include "lebroke-layouts.dtsi"

/ {
    chosen {
        zmk,physical-layout = &lebroke_physical_layout;
    };
};

/ {

    kscan0: kscan_composite {
        compatible = "zmk,kscan-composite";
        rows = <4>;
        columns = <10>;

        // Include the charlieplex driver
        charlieplex {
            kscan = <&kscan1>;
        };

        // Include the matrix driver...
        matrix {
            kscan = <&kscan2>;
            row-offset = <15>; // ...and offset it to not overlap
    	    col-offset = <15>;
        };
    };

    kscan1: kscan_charlieplex {
        compatible = "zmk,kscan-gpio-charlieplex";

        gpios

	    =       <&pro_micro 3 GPIO_ACTIVE_HIGH>  // 0, col 4 (9)
            ,   <&pro_micro 4 GPIO_ACTIVE_HIGH>  // 1, col 3 (8)
            ,   <&pro_micro 5 GPIO_ACTIVE_HIGH>  // 2, col 2 (7)
            ,   <&pro_micro 6 GPIO_ACTIVE_HIGH>  // 3, col 1 (6)
            ,   <&pro_micro 7 GPIO_ACTIVE_HIGH>  // 4, col 0 (5)
            ,   <&pro_micro 8 GPIO_ACTIVE_HIGH>  // 5, row 0 (2)
            ,   <&pro_micro 9 GPIO_ACTIVE_HIGH>  // 6, row 1 (3)
            ,   <&pro_micro 10 GPIO_ACTIVE_HIGH> // 7, row 0
            ,   <&pro_micro 16 GPIO_ACTIVE_HIGH> // 8, row 1
            ,   <&pro_micro 14 GPIO_ACTIVE_HIGH> // 9, col 0
            ,   <&pro_micro 15 GPIO_ACTIVE_HIGH> // 10, col 1
            ,   <&pro_micro 18 GPIO_ACTIVE_HIGH> // 11, col 2
            ,   <&pro_micro 19 GPIO_ACTIVE_HIGH> // 12, col 3
            ,   <&pro_micro 20 GPIO_ACTIVE_HIGH> // 13, col 4
            ;
    };
    
    kscan2: kscan_direct {
        compatible = "zmk,kscan-gpio-direct";
        wakeup-source;
        input-gpios
            = <&pro_micro 0 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)> // 0 but 15 after shift
            ;
    };
};



/ {
    default_transform: keymap_transform0 {
        compatible = "zmk,matrix-transform";
        columns = <10>; // Length of the "col-gpios" array
        rows = <4>; // Length of the "row-gpios" array
        map = <
        // row 0                                        row 2
        RC(9,7)  RC(7,10) RC(7,11) RC(7,12) RC(7,13)    RC(5,4) RC(5,3) RC(5,2) RC(5,1) RC(5,0)
	    RC(7,9)  RC(10,7) RC(11,7) RC(12,7) RC(13,7)    RC(4,5) RC(3,5) RC(2,5) RC(1,5) RC(0,5)

        // row 1                                        row 3
	    RC(8,9)  RC(8,10) RC(8,11) RC(8,12) RC(8,13)    RC(6,0) RC(6,1) RC(6,2) RC(6,3) RC(6,4)
	                      RC(11,8) RC(12,8) RC(13,8)    RC(0,6) RC(1,6) RC(2,6)                 RC(15,15) // soft off
        >;
    };
};
